---
name: Deployment lifecycle

on: ['deployment']

jobs:
  lifecycleStagingEnv:
    runs-on: ubuntu-latest

    steps:
      - name: Initialize deployment status
        uses: deliverybot/deployment-status@v1
        with:
          state: pending
          token: ${{ github.token }}

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_ACTION_WORKING_DIR: './terraform/aws/environments/stage'
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy staging environment
        if: github.event.deployment.payload.operation == 'deploy'
        run: |
          echo "Deploying ${{ github.event.deployment.environment }}..."

      - name: Delete staging environment
        if: github.event.deployment.payload.operation == 'delete'
        run: |
          echo "Deleting ${{ github.event.deployment.environment }}..."

      - name: Set status to 'success'
        if: success()
        uses: deliverybot/deployment-status@v1
        with:
          state: success
          token: ${{ github.token }}

      - name: Set status to 'failure'
        if: failure()
        uses: deliverybot/deployment-status@v1
        with:
          state: failure
          token: ${{ github.token }}
